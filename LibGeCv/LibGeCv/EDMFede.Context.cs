//------------------------------------------------------------------------------
// <auto-generated>
//     Codice generato da un modello.
//
//     Le modifiche manuali a questo file potrebbero causare un comportamento imprevisto dell'applicazione.
//     Se il codice viene rigenerato, le modifiche manuali al file verranno sovrascritte.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibGeCv
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GECVEntities : DbContext
    {
        public GECVEntities()
            : base("name=GECVEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Competenze> Competenze { get; set; }
        public virtual DbSet<Curriculum> Curriculum { get; set; }
        public virtual DbSet<EspLav> EspLav { get; set; }
        public virtual DbSet<PercorsoStudi> PercorsoStudi { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> AddCompetenze(string tipo, Nullable<int> livello, Nullable<int> idCv)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var livelloParameter = livello.HasValue ?
                new ObjectParameter("Livello", livello) :
                new ObjectParameter("Livello", typeof(int));
    
            var idCvParameter = idCv.HasValue ?
                new ObjectParameter("IdCv", idCv) :
                new ObjectParameter("IdCv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddCompetenze", tipoParameter, livelloParameter, idCvParameter);
        }
    
        public virtual int AddCv(string nome, string cognome, Nullable<int> eta, string matricola, string email, string residenza, string telefono)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            var cognomeParameter = cognome != null ?
                new ObjectParameter("Cognome", cognome) :
                new ObjectParameter("Cognome", typeof(string));
    
            var etaParameter = eta.HasValue ?
                new ObjectParameter("Eta", eta) :
                new ObjectParameter("Eta", typeof(int));
    
            var matricolaParameter = matricola != null ?
                new ObjectParameter("Matricola", matricola) :
                new ObjectParameter("Matricola", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var residenzaParameter = residenza != null ?
                new ObjectParameter("Residenza", residenza) :
                new ObjectParameter("Residenza", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCv", nomeParameter, cognomeParameter, etaParameter, matricolaParameter, emailParameter, residenzaParameter, telefonoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddCvStudi(Nullable<int> annoI, Nullable<int> annoF, string titolo, string descrizione, Nullable<int> idCv)
        {
            var annoIParameter = annoI.HasValue ?
                new ObjectParameter("AnnoI", annoI) :
                new ObjectParameter("AnnoI", typeof(int));
    
            var annoFParameter = annoF.HasValue ?
                new ObjectParameter("AnnoF", annoF) :
                new ObjectParameter("AnnoF", typeof(int));
    
            var titoloParameter = titolo != null ?
                new ObjectParameter("Titolo", titolo) :
                new ObjectParameter("Titolo", typeof(string));
    
            var descrizioneParameter = descrizione != null ?
                new ObjectParameter("Descrizione", descrizione) :
                new ObjectParameter("Descrizione", typeof(string));
    
            var idCvParameter = idCv.HasValue ?
                new ObjectParameter("IdCv", idCv) :
                new ObjectParameter("IdCv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddCvStudi", annoIParameter, annoFParameter, titoloParameter, descrizioneParameter, idCvParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddEspLav(Nullable<int> annoI, Nullable<int> annoF, string qualifica, string descrizione, Nullable<int> idCv)
        {
            var annoIParameter = annoI.HasValue ?
                new ObjectParameter("AnnoI", annoI) :
                new ObjectParameter("AnnoI", typeof(int));
    
            var annoFParameter = annoF.HasValue ?
                new ObjectParameter("AnnoF", annoF) :
                new ObjectParameter("AnnoF", typeof(int));
    
            var qualificaParameter = qualifica != null ?
                new ObjectParameter("Qualifica", qualifica) :
                new ObjectParameter("Qualifica", typeof(string));
    
            var descrizioneParameter = descrizione != null ?
                new ObjectParameter("Descrizione", descrizione) :
                new ObjectParameter("Descrizione", typeof(string));
    
            var idCvParameter = idCv.HasValue ?
                new ObjectParameter("IdCv", idCv) :
                new ObjectParameter("IdCv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddEspLav", annoIParameter, annoFParameter, qualificaParameter, descrizioneParameter, idCvParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CercaCitta(string citta)
        {
            var cittaParameter = citta != null ?
                new ObjectParameter("citta", citta) :
                new ObjectParameter("citta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CercaCitta", cittaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CercaEta(Nullable<int> eta)
        {
            var etaParameter = eta.HasValue ?
                new ObjectParameter("eta", eta) :
                new ObjectParameter("eta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CercaEta", etaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CercaLingua(string competenza)
        {
            var competenzaParameter = competenza != null ?
                new ObjectParameter("competenza", competenza) :
                new ObjectParameter("competenza", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CercaLingua", competenzaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CercaMatricola(string matri)
        {
            var matriParameter = matri != null ?
                new ObjectParameter("matri", matri) :
                new ObjectParameter("matri", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CercaMatricola", matriParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CercaParolaChiava(string parola)
        {
            var parolaParameter = parola != null ?
                new ObjectParameter("parola", parola) :
                new ObjectParameter("parola", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CercaParolaChiava", parolaParameter);
        }
    
        public virtual int DeleteCurriculum(Nullable<int> idcurr)
        {
            var idcurrParameter = idcurr.HasValue ?
                new ObjectParameter("idcurr", idcurr) :
                new ObjectParameter("idcurr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCurriculum", idcurrParameter);
        }
    
        public virtual int ModificaCurriculum(Nullable<int> idcurr, string nomeM, string cognomeM, Nullable<int> etaM, string matricolaM, string emailM, string residenzaM, string telefonoM)
        {
            var idcurrParameter = idcurr.HasValue ?
                new ObjectParameter("idcurr", idcurr) :
                new ObjectParameter("idcurr", typeof(int));
    
            var nomeMParameter = nomeM != null ?
                new ObjectParameter("nomeM", nomeM) :
                new ObjectParameter("nomeM", typeof(string));
    
            var cognomeMParameter = cognomeM != null ?
                new ObjectParameter("cognomeM", cognomeM) :
                new ObjectParameter("cognomeM", typeof(string));
    
            var etaMParameter = etaM.HasValue ?
                new ObjectParameter("etaM", etaM) :
                new ObjectParameter("etaM", typeof(int));
    
            var matricolaMParameter = matricolaM != null ?
                new ObjectParameter("matricolaM", matricolaM) :
                new ObjectParameter("matricolaM", typeof(string));
    
            var emailMParameter = emailM != null ?
                new ObjectParameter("emailM", emailM) :
                new ObjectParameter("emailM", typeof(string));
    
            var residenzaMParameter = residenzaM != null ?
                new ObjectParameter("residenzaM", residenzaM) :
                new ObjectParameter("residenzaM", typeof(string));
    
            var telefonoMParameter = telefonoM != null ?
                new ObjectParameter("telefonoM", telefonoM) :
                new ObjectParameter("telefonoM", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificaCurriculum", idcurrParameter, nomeMParameter, cognomeMParameter, etaMParameter, matricolaMParameter, emailMParameter, residenzaMParameter, telefonoMParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RecuperaIdCv(string matricola)
        {
            var matricolaParameter = matricola != null ?
                new ObjectParameter("Matricola", matricola) :
                new ObjectParameter("Matricola", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RecuperaIdCv", matricolaParameter);
        }
    
        public virtual ObjectResult<string> VisualizzaCV(Nullable<int> idCv)
        {
            var idCvParameter = idCv.HasValue ?
                new ObjectParameter("IdCv", idCv) :
                new ObjectParameter("IdCv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("VisualizzaCV", idCvParameter);
        }
    }
}
